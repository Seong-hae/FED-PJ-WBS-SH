● 1월 13일
- 인라인 일 경우는 transform 이 적용이 안된다.
- text-shadow 는 spread 값이 없다.
- a태그는 예외로 블록요소를 감쌀 수 있다.
- overflow:hidden 은 부모자격에 먹힌다. 포지션값이 있을때 


===============================================


● 1월 17일
- &amp; = & 특수기호

- 형제선택자 : +
예) div+div{} -> 앞에 형제 div가 있는 div선택
예) a+a{} -> 앞에 a가 있는 a선택
-> 첫번째를 제외한 나머지 형제요소들 선택시 많이 쓰여짐

-   삼각형만들기: 보더사용 
    border-bottom: 10px solid red;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
-> 보더 중첩이었을때의 특징이다.

- transform은 display값이 inline일때는 적용되지 않는다.

- transition 이랑 animation 동시사용하면 충돌 발생한다.

- 속성선택자: [속성명] 
    - 속성명의 특정값을 비교하는 4가지 방법
    1. [속성명=값] -> 정확히 일치하는 값
    2. [속성명*=값] -> 값 내용 중 있기만 하면 찾음
    4. [속성명^=값] -> 값 내용이 시작하는 문자열 찾음
    3. [속성명$=값] -> 값 내용이 끝나는 문자열 찾음
-> 사용하는 문자열에 문제가 없다면 따옴표를 쓰지 않아도 된다!
      (띄어쓰기, 특수문자 등 있다면 따옴표사용)

-   [ JS 출력하기 ]
     1. alert창 띄우기
     window.alert("나는 프론트엔드 개발자다!");
     2. 페이지 상단에 찍기
     document.write("좋겠다~!");
     3. 콘솔에 찍기
     console.log("그러냐?^^");

- 변수를 쓰는 이유는 재사용을 하기 위함이다.
  변수명은 호출시에 값이 나오고, 따옴표로 싸지 않고 띄어쓰기를 하지 않는다
  변수선언은 var, let, cont 키워드를 사용한다!

- JS에서 "="는 같다가 아니라 오른쪽의 값이 왼쪽에 들어감을 뜻한다
 예) innerHTML = 값

- JS에서 body는 특별히 취급해서 document.body 라고 선택함!

- [ 스타일시트를 변경하는 객체 : style ]
  하위속성은 모두 변수형으로 생성되어 있다
  2음절 이상 이름일 때 -를 지우고 대문자로 시작
  예) border-radius -> borderRadius



=================================================

● 1월 18일

- https://www.snig.digital/  : 크리스탈 재밌는 사이트

- 소리는 mp3, 영상은 mp4 가 표준

- muted가 되어있어야 영상이 로딩시 autoplay가 가능하다

- [ video 요소 - html5에서 지원하는 비디오 재생요소 ]
-> img 태그와 비슷하게 쉽게 비디오를 삽입하도록 등장!
((속성들))
1. src : 파일경로
2. controls : 동영상 제어버튼바
(이게 있으면 화면클릭으로 또는 스페이스바로 재생/멈춤 가능)
3. autoplay : 자동재생(소리없음에서 작동)
4. muted : 소리없음
5. loop : 무한반복재생
6. playsinline : 모바일 ios (아이폰) 동영상 재생시 자동재생 및 동영상이 페이지에 삽입된 상태에서 재생되도록 설정하는 옵션
(안드로이드는 없어도 자동재생 및 삽입재생됨!) 
7. poster : 비디오가 멈춤상태일때 첫화면 이미지
(값으로 이미지 경로만 쓰면 됨) 

- [ object-fit 속성 ]
-> img, video 요쇼에 사용하는 맞춤속성
 - 부모요소 크기를 채우는 방식을 결정함!
- contain 기본값
- 특히 이미지일 경우 배경이미지로 넣어야
 빈공간 없이 비율을 유지하면 채울 수 있다고
 생각하는데 이 속성을 사용하면 마치 배경이미지처럼
 이미지를 채우고 나가는 부분을 처리함
1. cover : 이미지나 동영상 비율유지하며 부모박스를 빈공간 없이 채움
(잘리는 부분이 있을 수 있음)
2. fill : 이미지나 동영상의 비율을 깨고 부모박스를 빈공간 없이 채움
(잘리는 부분이 없다)
3. contain : 이미지나 동영상이 모두 보이며 비율을 유지함
(잘리는 부분이 없으나 빈 공간 생김)

- [ object-position 속성 ]
- object-fit을 사용한 설정에서 위치를 이동할 때 사용
- 이미지나 동영상의 기준값을 변경 적용할 수 있다!
- 설정법:
object-position : 가로값 세로값;
1) 가로값 - left, center, right, 수치(px,% 등)
2) 세로값 - top, center, bottom, 수치(px,% 등)
-> 기본값은 가로값, 세로값 모두 center임!

- 필터의 명도를 조정하여 어두워보이게 함 : filter: brightness(50%);

- 용어체크:
1) 오버레이효과(overlay) - 어둡게처리
2) 트렌스페런트효과(transparent) - 밝게처리

- 자바스크립트는 가상요소를 컨트롤할 수 없다.

- [ JS의 이퀄의 의미 ]  
- 이퀄은 오른쪽값이 왼쪽에 할당됨을 의미!
(할당은 값이 특정 메모리공간에 들어감을 의미)  
-> 절대로 같다는 의미가 아님!!!

- [ JS에서 점(.)의 의미 ]
객체의 하위 메서드나 속성으로 들어감을 의미
객체는 목적을 가지고 만든 프로그램 단위체
메서드는 객체 내부에 만들어진 함수(코드저장소)
속성은 객체 내부의 특정값을 정의하는 항목
예) 우주.은하계.태양계.지구.대한민국.서울.강남구

- [ JS에서 코드의 마무리는 세미콜론;;;;;;; ]
JS의 코드 끝에는 세미콜론으로 마무리한다!
세미콜론이 안붙는 경우
1. 선언적함수(이름이 있는 함수)의 끝
2. 제어문의 끝(if문, for문,...)
 ((참고: 자동세미콜론 삽입기능))
ASI(Automatic Semicolon Insertion)
-> 브라우저가 세미콜론이 필요한 부분의 구문분석을 통하여 자동으로 넣어주는 기능!
-> 주의사항: 세미콜론을 안써도 되는 편리한 기능이지만
    자동구문분석에서 오류분석이 있을 수 있으므로
    개발자가 직접 세미콘론을 넣어주는 것을 추천함!!!

- [ JS에서 따옴표의 의미 ]
값을 의미! (string:문자데이터)
문자를 따옴표로 안싸면 그것은 변수라고 함!

- [ JS에서 요소를 선택하는 방법 ]
document 객체: html문서 전체를 담고 있는 DOM객체
DOM(Document Object Model) : 
웹문서에 있는 각 요소로 접근할 수 있는 방법을 제공하는 인터페이스다!

- [ JS 기본요소 선택법 ]
1. 아이디요소 선택법: getElementById() 메서드
document.getElementById(아이디명)
-> html 요소 중 아이디요소는 유일하므로 한번에 선택가능!
- 메서드 이름 분석
get -> 가져와라
Element -> 요소 하나를
By Id -> 아이디에 의한 것으로!

- [ CSS 선택자를 그대로 사용하는 선택법 ]
1. 하나의 요소 선택법
querySelector(CSS선택자)
-> 선택요소가 여러개여도 처음 만나는 하나의 요소를 선택함!
-> 이것은 몇번째라는 부가적인 선택이 불필요!!!
- 메서드 이름 분석
query 쿼리 -> 질의(기술적인 질문,요청)
Selector 선택자 -> CSS선택자
-> 브라우저에게 CSS 선택자로 질의를 한다! 그러면 결과로 요소를 선택한다!

 2. 여러개의 요소 선택법
querySelectorAll(CSS선택자)
-> 선택시 컬렉션 집합에 결과를 담는다!
-> 요소가 아나일 지라도 순번으로 선택한다!
(1) 순번선택법
.item(순번) 또는 [순번]
-> 순번은 0부터!
(2) 선택요소 개수 알아오기 : length
- 메서드 이름 분석
query 쿼리 -> 질의해!
Selector -> 선택자로
All -> 전부다 가져와!
-> 브라우저로 CSS선택자로 질의를 한다! 그러면 요소들을 선택한다!

-  querySelector(선택자)는 무조건 첫번째 만나는 하나만 선택한다.

- innerText = 값 -> 선택요소 내부에 글자 데이터 넣기



=====================================================

● 1월 19일

- [ select 요소 ]
지정된 값을 선택하는 입력요소
name 속성은 폼요소로 전송시 사용됨
하위필수요소 : option - 각 선택항목
옵션을 그룹화하는 요소 : optgroup
(참고:https://www.w3schools.com/tags/tryit.asp?filename=tryhtml_optgroup)
유의사항 : 값을 선택할 경우 선택값은 option 요소의 속성인 value값을 읽어감!
단, value를 안쓸 수 있는데 이런 경우 내부 데이터값을 읽어간다
 /* 선택시(포커스갈때) 브라우저 기본 아웃라인 없애기 */
#sel:focus{
    outline: none;
}

- min() 함수를 사용하면 절대 값의 상한선을 두고
어떤 엘리먼트의 크기를 상대적으로 가져갈 수 있습니다.
min() CSS 함수는 2개 이상의 대소비교가 가능한 값이 주어졌을 때,
그 중에서 작은 값을 반환합니다.

- var 변수명 = "데이터값";
  변수선언 후 재할당시 var를 쓰지 않는다
  var = "A", "B", "C" ...
 변수를 한 번만 선언하고 한 꺼번에 할당할 수 있다

- [ JS의 코드 실행순서 ]
1. 위에서 아래로
2. 이퀄 오른쪽에서 왼쪽으로
3. 소괄호안에서 바깥으로
4. 함수 바깥부터 실행, 함수는 호출시 실행
  
- [ 템플릿 리터럴! ]
https://www.w3schools.com/js/js_string_templates.asp
-> 변수를 섞어쓸 문자 데이터를 따옴표를 안씀!
백틱(back-tics:`)으로 쌈  (백틱 내부에는 엔터가 자유롭다!)
-> 변수는 ${...}로 삽입한다!
${...} -> interpolation(보간법,내삽법)
-> 중괄호 사이에는 수식도 가능함!
 예) var home = "아름다운";
 "나의집" -> `나의 ${home} 집`


=====================================================

● 1월 20일





















